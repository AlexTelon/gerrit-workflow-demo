<?xml version='1.0' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1.10">
  <actions/>
  <description>Main workflow build!</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>4</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.branch.RateLimitBranchProperty_-JobPropertyImpl plugin="branch-api@0.2-beta-4">
      <durationName>hour</durationName>
      <count>0</count>
    </jenkins.branch.RateLimitBranchProperty_-JobPropertyImpl>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@1.10">
    <script>// Run this with mvn args on each node
def mvn(args) {
    sh &quot;${tool &apos;Maven 3.x&apos;}/bin/mvn ${args}&quot;
}

def fetch_repo() {
    sh &apos;repo init -u http://gerrit:8080/umbrella -m jenkins.xml&apos; 
    sh &apos;repo sync&apos;
//    sh &quot;repo download $GERRIT_PROJECT $GERRIT_CHANGE_NUMBER/$GERRIT_PATCHSET_NUMBER&quot;
}

// TOOD patchset use
// TODO supply branch name to script for easy customization

def builds = [:]
builds[&apos;workflowrun&apos;] =  {
  stage &apos;building&apos;
  node {
    sh &apos;rm -rf source&apos;
    // Remove dir component in 1.11, replaced with deletedir
    dir (&apos;source&apos;) {
      fetch_repo()
      mvn(&quot;clean compile install -f primary/pom.xml&quot;)
      mvn(&quot;clean compile install -Dmaven.test.skip -f secondary/pom.xml&quot;)
      sh &quot;mv */target/*.jar .&quot;
      stash includes: &apos;*.jar&apos;, name: &apos;jars&apos;
    }
  }

  def slowtests = [:]
  slowtests[&apos;Functional Tests&apos;] = {
    node {
     // Fetch both artifacts
     unstash name:&apos;jars&apos;
     sleep 2

     // Verify both jars can run successfully
     sh &apos;java -jar primary*.jar -delay 1 --length 100&apos;
     sh &apos;java -jar secondary*.jar&apos;
    }
  }
  slowtests[&apos;Integration tests&apos;] = {
    node {
      sleep 15
      unstash name:&apos;jars&apos;
      sh &apos;java -jar primary*.jar `java -jar secondary*.jar`&apos;
    }
  }
  slowtests[&apos;failFast&apos;] = true
  parallel slowtests
}

// PARALLEL BUILD STEP
builds[&apos;parallelbuild&apos;] = {
  stage &apos;building&apos;
  build job: &apos;freestylebuild&apos;, parameters: [[$class: &apos;StringParameterValue&apos;, name: &apos;sample&apos;, value: &apos;val&apos;]]
}

builds[&apos;failFast&apos;] = true
parallel builds</script>
    <sandbox>false</sandbox>
  </definition>
  <triggers/>
</flow-definition>